https://leetcode.com/problems/convert-an-array-into-a-2d-array-with-conditions/solutions/4489526/better-than-100-c-java-python-javascript-2-approaches-explained/?envType=daily-question&envId=2024-01-02

class Solution {
public:
    vector<vector<int>> findMatrix(vector<int>& nums) {
        vector<vector<int>> ans;
        unordered_map<int, int> m;
        for(auto num:nums){
            m[num]++;
        }
        while(!m.empty()){
            vector<int> temp;
            for(auto it = m.begin();it!=m.end();){
                temp.push_back(it->first);
                if(it->second == 1) {
                    auto itr = it;
                    it++;
                    m.erase(itr);
                }
                else{
                    m[it->first]--;
                    it++;
                } 
            }
            ans.push_back(temp);
        }
        return ans;
    }
};

approach 2 direct dimaag lagane wala

class Solution {
public:
    vector<vector<int>> findMatrix(vector<int>& nums) {
        vector<int> freq(nums.size() + 1);
        
        vector<vector<int>> ans;
        for (int c : nums) {
            if (freq[c] >= ans.size()) {
                ans.push_back({});
            }
            
            // Store the integer in the list corresponding to its current frequency.
            ans[freq[c]].push_back(c);
            freq[c]++;
        }
        
        return ans;
    }
};