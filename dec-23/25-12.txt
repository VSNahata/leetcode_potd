// quick revision on dp(ninja wala problem jaisa hai).
class Solution {
public:
    int numDecodings(string s) {
        vector<int> dp(s.size(), -1);
        solve(s, 0, dp);
        for(auto i: dp) cout<< i<<" ";

        return dp[0];
    }
    int solve(string s, int ind, vector<int>&dp){
        if(ind == s.size()) return 1;
        else if(s[ind] == '0') return dp[ind] = 0;
        if(dp[ind]!=-1) return dp[ind];
        int ways = 0;
        ways+=solve(s, ind+1, dp);
        if(ind+1<s.size() && stoi(s.substr(ind, 2))<=26)
        ways+=solve(s, ind+2, dp);
        return dp[ind] = ways;
    }
};