class FoodRatings {
public:
    unordered_map<string, map<int, set<string>>> m;
    unordered_map<string, string> food_type;
    unordered_map<string, int> food_rating;
    FoodRatings(vector<string>& foods, vector<string>& cuisines, vector<int>& ratings) {
        for(int i = 0;i<foods.size();i++)
        {
            m[cuisines[i]][ratings[i]].insert(foods[i]);
            food_type[foods[i]]=cuisines[i];
            food_rating[foods[i]] = ratings[i];
        }
        
    }
    
    void changeRating(string food, int newRating) {
        int oldRating = food_rating[food];
        string cuisineType = food_type[food];
        food_rating[food] = newRating;
        m[cuisineType][oldRating].erase(food);
        if(m[cuisineType][oldRating].size() == 0)
        m[cuisineType].erase(oldRating);
        m[cuisineType][newRating].insert(food);

    }
    
    string highestRated(string cuisine) {
        set<string> foodSet = (m[cuisine].rbegin())->second;
        return *foodSet.begin();
    }
};

//yahan se map ka sahi istemal karna aa jayega ki data kaise store karte hai and supporting map ke use se data kaise retrieve kiya jata hai.

/**
 * Your FoodRatings object will be instantiated and called as such:
 * FoodRatings* obj = new FoodRatings(foods, cuisines, ratings);
 * obj->changeRating(food,newRating);
 * string param_2 = obj->highestRated(cuisine);
 */