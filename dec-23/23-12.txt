class Solution {
public:
    bool isPathCrossing(string path) {
    //     int n = 105;
    // vector<vector<int>> a( n , vector<int> (n, 0)); 
    // int i = 0, j = 0;
    // a[i][j] =1;
    // for(auto ch : path){
    //     if(ch == 'N'){
    //       i--;  
    //       if(a[i][j]) return true;
    //       a[i][j] = 1;  
    //     } 
    //     else if(ch == 'E'){
    //         j++;
    //         if(a[i][j]) return true;
    //       a[i][j] = 1;  
    //     } 
    //     else if(ch == 'W') {
    //         j--;
    //         if(a[i][j]) return true;
    //       a[i][j] = 1;  
    //     }
    //     else if(ch == 'S') {
    //         i++;
    //         if(a[i][j]) return true;
    //       a[i][j] = 1;  
    //     }
    // }
    // return false;

    set<pair<int, int>> s;
    int i = 0, j=0;
    s.insert({0,0});
    for(auto ch:path){
        if(ch == 'N'){
            i--;
            if(s.find({i,j})!=s.end()) return true;
            s.insert({i,j});
        }
        else if(ch == 'E'){
            j++;
            if(s.find({i,j})!=s.end()) return true;
            s.insert({i,j});
        }
        else if(ch == 'W'){
            j--;
            if(s.find({i,j})!=s.end()) return true;
            s.insert({i,j});
        }
        else if(ch == 'S'){
            i++;
            if(s.find({i,j})!=s.end()) return true;
            s.insert({i,j});
        }
    }
    return false;
    }
};