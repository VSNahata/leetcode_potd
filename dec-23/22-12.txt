class Solution {
public:
    int countOnes(string s, int start, int end){
        int cnt = 0;
        for(int i = start;i<end;i++)
        if(s[i] == '1') cnt++;
        return cnt;
    }
    int countZeros(string s, int start, int end){
        int cnt = 0;
        for(int i = start;i<end;i++)
        if(s[i] == '0') cnt++;
        return cnt;
    }
    int maxScore(string s) {
        int ans = 0;
        for(int i = 1;i<=s.size()-1;i++){
            ans = max(ans, countZeros(s, 0, i)+countOnes(s, i, s.size()));
        }
        return ans;
    }
};

another approach just because ismein prefix and suffix array wagerah ka use kiya hai.
class Solution {
public:
    int maxScore(string s) {
        int n = s.size();
        vector<int> suf(n, 0);
        suf[n - 1] = s[n - 1] == '1';
        
        for(int i = n - 2; i > -1; i--){
            suf[i] = suf[i + 1]  + (s[i] == '1');
        }
        
        int zero = 0;
        int ans = 0;
        
        for(int i = 0; i < n - 1; i++){
            zero += s[i] == '0';
            
            ans = max(ans, zero + suf[i + 1]);
        }
        
        return ans;
    }
};